---
# - name: Import sbt repo for scala
#   yum_repository:
#     name: bintray-sbt-rpm
#     description: bintray-sbt
#     baseurl: https://sbt.bintray.com/rpm
#     enabled: yes
#     file: bintray-sbt-rpm

# - name: Install java packages
#   package:
#     name:
#       - java-1.8.0-openjdk-devel
#       - java-latest-openjdk-devel
#       - sbt
#     state: present
#     update_cache: yes

# - name: create maven directory
#   file:
#     path: "/opt/maven"
#     state: directory
    
# - name: download and unzip maven
#   unarchive:
#     src: https://www-us.apache.org/dist/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip
#     dest: "/opt/maven"
#     remote_src: yes

# - name: create gradle directory
#   file:
#     path: "/opt/gradle"
#     state: directory
    
# - name: download and unzip gradle
#   unarchive:
#     src: https://services.gradle.org/distributions/gradle-6.0.1-bin.zip
#     dest: "/opt/gradle"
#     remote_src: yes

# - name: install jabba for java sdk management
#   shell: >
#     curl -o- -sL https://github.com/shyiko/jabba/raw/master/install.sh | bash
#   args:
#     creates: "{{ ansible_env.HOME }}/.jabba/jabba.sh"

# - name: Make sure $HOME/bin exists
#   file:
#     path: "{{ ansible_env.HOME }}/bin/"
#     state: directory
#     mode: '0755'
    
# - name: Install leiningen script
#   get_url:
#     url: https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
#     dest: "{{ ansible_env.HOME }}/bin/"
#     mode: '0755'

# - name: Add dotnet core repo
#   yum_repository:
#     name: dotnet-core-packages
#     description: packages-microsoft-com-prod
#     baseurl: https://packages.microsoft.com/fedora/30/prod/
#     gpgkey: https://packages.microsoft.com/keys/microsoft.asc
#     gpgcheck: true
#     enabled: yes
#     file: microsoft-prod

# - name: Add mono develop repo
#   yum_repository:
#     name: mono-centos8-stable
#     description: mono-centos8-stable
#     baseurl: https://download.mono-project.com/repo/centos8-stable/
#     gpgkey: https://download.mono-project.com/repo/xamarin.gpg
#     gpgcheck: true
#     enabled: yes
#     file: mono-centos8-stable

# - name: Install dotnet-core, mono and fsharp
#   package:
#     name:
#       - dotnet-sdk-3.0
#       - mono-complete
#       - fsharp
#     state: present
#     update_cache: yes

# - name: Install nvm
#   shell: >
#     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
#   args:
#     creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

# - name: Install node and set version
#   become: yes
#   become_user: root
#   shell: "source /root/.nvm/nvm.sh && nvm install 12.14"
#   args:
#     executable: /bin/bash

# - name: install pyenv
#   git:
#     repo: https://github.com/pyenv/pyenv.git
#     version: master
#     dest: "{{ ansible_env.HOME }}/.pyenv"

# - name: Install python and set version
#   shell: "pyenv install python3.6.9"

- name: install pipenv
  pip:
    name: pipenv
    executable: pip3

- name: get temporary poetry installer script
  get_url:
    url: https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
    dest: "{{ ansible_env.HOME }}/get-poetry.py"

- name: install poetry
  shell: "python3 {{ ansible_env.HOME }}/get-poetry.py"
  
- name: Remove poetry-installer file 
  file:
    path: "{{ ansible_env.HOME }}/get-poetry.py"
    state: absent